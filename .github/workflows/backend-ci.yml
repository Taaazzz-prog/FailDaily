name: Backend CI

on:
  push:
  pull_request:

jobs:
  test-backend:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: faildaily
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -proot --silent" 
          --health-interval=10s --health-timeout=5s --health-retries=10

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'

      - name: Wait for DB
        run: |
          sudo apt-get update -y
          sudo apt-get install -y mysql-client
          for i in {1..60}; do
            mysqladmin ping -h 127.0.0.1 -uroot -proot --silent && break
            sleep 2
          done

      - name: Import schema
        env:
          MYSQL_PWD: root
        run: |
          mysql -h 127.0.0.1 -uroot -proot -e "CREATE DATABASE IF NOT EXISTS \`faildaily\`;"
          mysql -h 127.0.0.1 -uroot -proot faildaily < backend-api/migrations/faildaily.sql
          # apply additional migrations
          for f in backend-api/migrations/*.sql; do
            base=$(basename "$f")
            if [ "$base" != "faildaily.sql" ]; then
              echo "Applying migration: $base"
              mysql -h 127.0.0.1 -uroot -proot faildaily < "$f"
            fi
          done

      - name: Install backend deps
        working-directory: backend-api
        run: npm install

      - name: Run tests (NODE_ENV=test)
        working-directory: backend-api
        env:
          NODE_ENV: test
          DB_HOST: 127.0.0.1
          DB_PORT: '3306'
          DB_NAME: faildaily
          DB_USER: root
          DB_PASSWORD: root
          JWT_SECRET: test_jwt_secret_for_ci
        run: npx jest --runInBand

