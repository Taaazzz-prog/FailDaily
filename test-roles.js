// Test simple pour v√©rifier le syst√®me de r√¥les
console.log('üß™ Test du syst√®me de r√¥les');

import { UserRole } from './src/app/models/user-role.model';
import { RoleService } from './src/app/services/role.service';

// Cr√©er une instance du service de r√¥les
const roleService = new RoleService();

// Test d'un utilisateur super admin
const superAdminUser = {
    id: '1',
    email: 'superadmin@test.com',
    displayName: 'Super Admin Test',
    avatar: 'test.png',
    joinDate: new Date(),
    totalFails: 0,
    couragePoints: 0,
    badges: [],
    role: UserRole.SUPER_ADMIN
};

// Test d'un utilisateur admin
const adminUser = {
    id: '2',
    email: 'admin@test.com',
    displayName: 'Admin Test',
    avatar: 'test.png',
    joinDate: new Date(),
    totalFails: 0,
    couragePoints: 0,
    badges: [],
    role: UserRole.ADMIN
};

// Test d'un utilisateur normal
const normalUser = {
    id: '3',
    email: 'user@test.com',
    displayName: 'User Test',
    avatar: 'test.png',
    joinDate: new Date(),
    totalFails: 0,
    couragePoints: 0,
    badges: [],
    role: UserRole.USER
};

console.log('‚úÖ Super Admin peut acc√©der au panel:', roleService.canAccessAdmin(superAdminUser));
console.log('‚úÖ Super Admin peut g√©rer les admins:', roleService.hasPermission(superAdminUser, 'canManageAdmins'));
console.log('‚úÖ Super Admin peut acc√©der aux param√®tres syst√®me:', roleService.hasPermission(superAdminUser, 'canAccessSystemSettings'));
console.log('‚úÖ Admin peut acc√©der au panel:', roleService.canAccessAdmin(adminUser));
console.log('‚ùå Admin ne peut PAS g√©rer les admins:', roleService.hasPermission(adminUser, 'canManageAdmins'));
console.log('‚úÖ Admin peut g√©rer les utilisateurs:', roleService.hasPermission(adminUser, 'canManageUsers'));
console.log('‚ùå User ne peut pas acc√©der au panel:', roleService.canAccessAdmin(normalUser));
console.log('‚ùå User ne peut pas g√©rer les utilisateurs:', roleService.hasPermission(normalUser, 'canManageUsers'));

console.log('üè∑Ô∏è Labels des r√¥les:');
console.log('- User:', roleService.getRoleLabel(UserRole.USER));
console.log('- Moderator:', roleService.getRoleLabel(UserRole.MODERATOR));
console.log('- Admin:', roleService.getRoleLabel(UserRole.ADMIN));
console.log('- Super Admin:', roleService.getRoleLabel(UserRole.SUPER_ADMIN));

console.log('üéâ Test termin√© avec succ√®s !');
