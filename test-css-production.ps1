#!/usr/bin/env powershell

<#
.SYNOPSIS
    üß™ Test Post-D√©ploiement CSS - V√©rification OVH
    
.DESCRIPTION
    Script de test rapide pour v√©rifier que les corrections CSS 
    sont bien d√©ploy√©es et fonctionnelles sur le serveur OVH.
#>

Write-Host "üß™ TEST POST-D√âPLOIEMENT CSS OVH" -ForegroundColor Green
Write-Host "=================================" -ForegroundColor Green
Write-Host ""

# 1. Test de connectivit√© de base
Write-Host "1Ô∏è‚É£ Test connectivit√© de base..." -ForegroundColor Yellow

try {
    $healthCheck = Invoke-RestMethod -Uri "https://faildaily.com/api/health" -TimeoutSec 10
    if ($healthCheck.status -eq "OK") {
        Write-Host "   ‚úÖ API Health Check: OK" -ForegroundColor Green
    } else {
        Write-Host "   ‚ö†Ô∏è  API Health Check: Status inattendu" -ForegroundColor Yellow
    }
} catch {
    Write-Host "   ‚ùå API Health Check: √âchec" -ForegroundColor Red
}

try {
    $frontendCheck = Invoke-WebRequest -Uri "https://faildaily.com" -TimeoutSec 10
    if ($frontendCheck.Content -like "*FailDaily*") {
        Write-Host "   ‚úÖ Frontend accessible" -ForegroundColor Green
    } else {
        Write-Host "   ‚ùå Frontend: Contenu inattendu" -ForegroundColor Red
    }
} catch {
    Write-Host "   ‚ùå Frontend inaccessible" -ForegroundColor Red
}

Write-Host ""

# 2. Test authentification admin
Write-Host "2Ô∏è‚É£ Test authentification super admin..." -ForegroundColor Yellow

$authBody = @{
    email = "bruno@taaazzz.be"
    password = "@51008473@"
} | ConvertTo-Json

try {
    $authResponse = Invoke-RestMethod -Uri "https://faildaily.com/api/auth/login" -Method POST -Body $authBody -ContentType "application/json" -TimeoutSec 10
    
    if ($authResponse.success -and $authResponse.token) {
        Write-Host "   ‚úÖ Authentification: Succ√®s" -ForegroundColor Green
        Write-Host "   üë§ Role: $($authResponse.user.role)" -ForegroundColor Cyan
        Write-Host "   üîë Token obtenu: $(($authResponse.token).Substring(0,20))..." -ForegroundColor Gray
        
        # 3. Test endpoint admin
        Write-Host ""
        Write-Host "3Ô∏è‚É£ Test endpoint admin..." -ForegroundColor Yellow
        
        $headers = @{
            "Authorization" = "Bearer $($authResponse.token)"
            "Content-Type" = "application/json"
        }
        
        try {
            $adminResponse = Invoke-RestMethod -Uri "https://faildaily.com/api/admin/logs/summary" -Headers $headers -TimeoutSec 10
            Write-Host "   ‚úÖ Endpoint admin accessible" -ForegroundColor Green
        } catch {
            Write-Host "   ‚ùå Endpoint admin inaccessible" -ForegroundColor Red
        }
        
    } else {
        Write-Host "   ‚ùå Authentification √©chou√©e" -ForegroundColor Red
    }
} catch {
    Write-Host "   ‚ùå Erreur authentification: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host ""

# 4. V√©rification CSS/Interface
Write-Host "4Ô∏è‚É£ Instructions test interface CSS..." -ForegroundColor Yellow
Write-Host "   üåê URL Admin: https://faildaily.com/tabs/admin" -ForegroundColor Cyan
Write-Host "   üîë Login: bruno@taaazzz.be / @51008473@" -ForegroundColor Cyan
Write-Host ""
Write-Host "   üìã Points √† v√©rifier:" -ForegroundColor White
Write-Host "      ‚Ä¢ Cartes de statistiques bien styl√©es" -ForegroundColor White
Write-Host "      ‚Ä¢ Tableau des logs avec scrollbar" -ForegroundColor White
Write-Host "      ‚Ä¢ Couleurs Ionic correctes (bleu primary, etc.)" -ForegroundColor White
Write-Host "      ‚Ä¢ Pas de styles 'cass√©s' ou par d√©faut" -ForegroundColor White
Write-Host ""

# 5. Comparaison environnements
Write-Host "5Ô∏è‚É£ Comparaison visuelle recommand√©e..." -ForegroundColor Yellow
Write-Host "   üîÑ Comparer c√¥te √† c√¥te:" -ForegroundColor Cyan
Write-Host "      ‚Ä¢ Local: http://localhost:4200/tabs/admin" -ForegroundColor White
Write-Host "      ‚Ä¢ Production: https://faildaily.com/tabs/admin" -ForegroundColor White
Write-Host "   ‚ú® L'interface devrait √™tre IDENTIQUE !" -ForegroundColor Green

Write-Host ""
Write-Host "üéØ R√âSUM√â CORRECTIONS D√âPLOY√âES" -ForegroundColor Green
Write-Host "==============================" -ForegroundColor Green
Write-Host "‚úÖ Code synchronis√© avec GitHub" 
Write-Host "‚úÖ build:docker sans optimisations CSS agressives"
Write-Host "‚úÖ Variables Ionic pr√©serv√©es en production"
Write-Host "‚úÖ Dockerfile modifi√© pour utiliser la nouvelle commande"
Write-Host "‚úÖ Conteneur frontend reconstruit compl√®tement"
Write-Host ""
Write-Host "üé® L'interface admin devrait maintenant √™tre magnifique !" -ForegroundColor Green