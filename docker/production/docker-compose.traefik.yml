version: '3.8'

services:
  # Traefik reverse proxy
  traefik:
    image: traefik:v3.0
    container_name: faildaily-traefik-prod
    restart: unless-stopped
    command:
      # API et dashboard
      - "--api.insecure=false"
      - "--api.dashboard=true"
      
      # Points d'entrée
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      
      # Redirection HTTPS automatique
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      
      # Providers
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=production_faildaily-network"
      
      # Certificats SSL Let's Encrypt
      - "--certificatesresolvers.letsencrypt.acme.email=bruno@taaazzz.be"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      
      # Logs
      - "--log.level=INFO"
      - "--accesslog=true"
    
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Dashboard Traefik
    
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - faildaily_traefik-ssl-certs:/letsencrypt
    
    networks:
      - faildaily-network
    
    labels:
      # Dashboard Traefik (désactivé temporairement - pas de DNS)
      - "traefik.enable=false"

  # Backend API
  backend:
    build:
      context: ../../backend-api
      dockerfile: ../docker/production/backend.prod.Dockerfile
    container_name: faildaily-backend-prod
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DB_HOST=db
      - DB_USER=faildaily_user
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=faildaily
      - JWT_SECRET=${JWT_SECRET}
      - CORS_ORIGIN=https://faildaily.com,https://www.faildaily.com
      - RATE_LIMIT_WINDOW=15
      - RATE_LIMIT_MAX_REQUESTS=1000
    depends_on:
      - db
    networks:
      - faildaily-network
    volumes:
      - faildaily_backend-uploads:/app/uploads
    labels:
      - "traefik.enable=true"
      # API routes (utilise l'IP pour l'instant)
      - "traefik.http.routers.backend.rule=PathPrefix(`/api/`)"
      - "traefik.http.services.backend.loadbalancer.server.port=3000"
      # Health check
      - "traefik.http.routers.backend-health.rule=Path(`/health`)"

  # Frontend
  frontend:
    build:
      context: ../../frontend
      dockerfile: ../docker/production/frontend.prod.Dockerfile
    container_name: faildaily-frontend-prod
    restart: unless-stopped
    networks:
      - faildaily-network
    labels:
      - "traefik.enable=true"
      # Frontend routes (par défaut)
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
      # SPA fallback pour Angular routing
      - "traefik.http.routers.frontend.middlewares=spa-fallback"
      - "traefik.http.middlewares.spa-fallback.errors.status=404"
      - "traefik.http.middlewares.spa-fallback.errors.service=frontend"
      - "traefik.http.middlewares.spa-fallback.errors.query=/index.html"

  # Base de données MySQL
  db:
    image: mysql:8.0.35
    container_name: faildaily-db-prod
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
      MYSQL_DATABASE: faildaily
      MYSQL_USER: faildaily_user
      MYSQL_PASSWORD: "${DB_PASSWORD}"
    volumes:
      - faildaily_mysql-data:/var/lib/mysql
    networks:
      - faildaily-network
    command: --default-authentication-plugin=mysql_native_password

networks:
  faildaily-network:
    driver: bridge

volumes:
  faildaily_mysql-data:
    external: true
  faildaily_backend-uploads:
    external: true
  faildaily_traefik-ssl-certs:
