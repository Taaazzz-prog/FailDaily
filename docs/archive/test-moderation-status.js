const mysql = require('mysql2/promise');
require('dotenv').config();

async function testModerationStatus() {
  const connection = await mysql.createConnection({
    host: process.env.DB_HOST || 'localhost',
    port: Number(process.env.DB_PORT) || 3306,
    user: process.env.DB_USER || 'root',
    password: process.env.DB_PASSWORD || '',
    database: process.env.DB_NAME || 'faildaily',
    charset: 'utf8mb4'
  });

  try {
    console.log('üîç √âtat actuel de la mod√©ration des fails:');
    
    // R√©cup√©rer tous les fails avec leur statut de mod√©ration
    const [fails] = await connection.execute(`
      SELECT 
        f.id, 
        f.title, 
        f.created_at,
        fm.status AS moderation_status,
        CASE 
          WHEN fm.status IS NULL THEN 'Pas de mod√©ration'
          WHEN fm.status = 'under_review' THEN 'En cours de mod√©ration'
          WHEN fm.status = 'approved' THEN 'Approuv√©'
          WHEN fm.status = 'hidden' THEN 'Cach√©'
          ELSE 'Statut inconnu'
        END AS status_description
      FROM fails f
      LEFT JOIN fail_moderation fm ON fm.fail_id = f.id
      ORDER BY f.created_at DESC
      LIMIT 10
    `);

    console.table(fails);

    // Compter les diff√©rents statuts
    const [counts] = await connection.execute(`
      SELECT 
        CASE 
          WHEN fm.status IS NULL THEN 'no_moderation'
          ELSE fm.status
        END AS status,
        COUNT(*) as count
      FROM fails f
      LEFT JOIN fail_moderation fm ON fm.fail_id = f.id
      GROUP BY CASE 
        WHEN fm.status IS NULL THEN 'no_moderation'
        ELSE fm.status
      END
    `);

    console.log('\nüìä R√©partition des statuts de mod√©ration:');
    console.table(counts);

    // V√©rifier s'il y a des signalements
    const [reports] = await connection.execute(`
      SELECT COUNT(*) as total_reports FROM fail_reports
    `);

    console.log(`\nüì¢ Nombre total de signalements: ${reports[0].total_reports}`);

  } catch (error) {
    console.error('‚ùå Erreur:', error);
  } finally {
    await connection.end();
  }
}

testModerationStatus();
